plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-arc'

    // REST API
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-rest-jackson'

    // Database & ORM
    implementation 'io.quarkus:quarkus-hibernate-orm-panache'
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    implementation 'io.quarkus:quarkus-hibernate-validator'

    // Security
    implementation 'io.quarkus:quarkus-oidc'
    implementation 'io.quarkus:quarkus-smallrye-jwt'
    implementation 'io.quarkus:quarkus-security'

    // Keycloak Admin Client
    implementation('org.keycloak:keycloak-admin-client:24.0.5') {
        exclude group: 'org.slf4j'
    }

    // Health & Observability
    implementation 'io.quarkus:quarkus-smallrye-health'
    implementation 'io.quarkus:quarkus-smallrye-openapi'

    // MinIO
    implementation 'io.minio:minio:8.5.12'

    // Utilities
    implementation 'org.apache.commons:commons-text:1.12.0'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    // Testing
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'io.quarkus:quarkus-jdbc-h2'
    testImplementation 'io.quarkus:quarkus-test-keycloak-server'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
}

configurations.all {
    resolutionStrategy {
        force 'org.keycloak:keycloak-admin-client:24.0.5'
    }
}

group = 'com.company.sharefile'
version = '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    useJUnitPlatform()
    systemProperty 'java.util.logging.manager', 'org.jboss.logmanager.LogManager'
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}