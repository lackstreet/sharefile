services:
  # PostgreSQL - Database principale
  postgres:
    image: postgres:18-alpine
    container_name: sharefile-db-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-sharefile-db-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-sharefile-db-password}
      POSTGRES_DB: ${DB_NAME:-sharefile}
      # Database multipli per Keycloak e applicazione
      POSTGRES_MULTIPLE_DATABASES: ${DB_NAME:-sharefile},${KEYCLOAK_DB:-keycloak}
    ports:
      - "5431:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - sharefile-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-sharefile-db-user} -d ${DB_NAME:-sharefile}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # MinIO - File Storage
  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z
    container_name: sharefile-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-password123}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - sharefile-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # Redis - Cache e Sessions
  redis:
    image: redis:8-alpine
    container_name: sharefile-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sharefile-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Keycloak - Authentication
  keycloak:
    image: quay.io/keycloak/keycloak:26.3.3
    container_name: sharefile-keycloak
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-sharefile-keycloak-user}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-sharefile-keycloak-password}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${KEYCLOAK_DB:-keycloak}
      KC_DB_USERNAME: ${DB_USER:-sharefile-db-user}
      KC_DB_PASSWORD: ${DB_PASSWORD:-sharefile-db-password}
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
    volumes:
      - keycloak_data:/opt/keycloak/data/import
    command: start-dev --import-realm
    networks:
      - sharefile-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

# Volumi persistenti
volumes:
  postgres_data:
  keycloak_data:
  minio_data:
  redis_data:

# Reti
networks:
  sharefile-network:
    driver: bridge